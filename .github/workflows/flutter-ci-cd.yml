name: Flutter CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java version
        run: java -version
      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter --version
      # Generate key.properties
      - name: Setup Keystore File
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/key_todo.jks

      - name: Setup key.properties
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=key_todo.jks" >> android/key.properties
      # Setup Environment Variables
      - name: Create .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > .env
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env

      - name: Debug .env file
        run: cat .env

      # Install dependencies
      - name: Install Dependencies
        run: flutter pub get

      - name: Install intl_utils
        run: flutter pub global activate intl_utils

      - name: Set PUB_CACHE path
        run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Generate Localization
        run: flutter pub global run intl_utils:generate

      - name: Build APK
        run: flutter build apk --release

      # Upload the APK as an Artifact
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy:
    name: Deploy to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter --version

      # Install Fastlane
      - name: Install Fastlane
        run: |
          gem install bundler --user-install
          bundle install --path vendor/bundle

      # Add Firebase App Distribution plugin to Fastlane
      - name: Add Firebase App Distribution Plugin
        run: fastlane add_plugin firebase_app_distribution

      # Deploy to Firebase
      - name: Deploy to Firebase
        run: bundle exec fastlane firebase